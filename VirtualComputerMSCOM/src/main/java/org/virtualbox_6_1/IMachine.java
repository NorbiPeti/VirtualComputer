// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by jni4net. See http://jni4net.sourceforge.net/ 
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

package org.virtualbox_6_1;

import lombok.var;
import virtualcomputerwindows.Exports;

@net.sf.jni4net.attributes.ClrInterface
public interface IMachine {

	//<generated-interface>
	@net.sf.jni4net.attributes.ClrMethod("()LSystem/UInt32;")
	int getInternalAndReservedAttribute15IMachine();

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/UInt32;")
	int getInternalAndReservedAttribute16IMachine();

	@net.sf.jni4net.attributes.ClrMethod("(Lorg/virtualbox_6_1/Session;Lorg/virtualbox_6_1/LockType;)V")
	void lockMachine_FixIt(Session aSession, org.virtualbox_6_1_FixIt.LockType aLockType);

	default void lockMachine(ISession session, LockType lockType) {
		lockMachine_FixIt((Session) session, (org.virtualbox_6_1_FixIt.LockType) system.Enum.ToObject(org.virtualbox_6_1_FixIt.LockType.typeof(), lockType.ordinal()));
	}

	@net.sf.jni4net.attributes.ClrMethod("(Lorg/virtualbox_6_1/Session;LSystem/String;LSystem/Array;)Lorg/virtualbox_6_1/IProgress;")
	IProgress launchVMProcess_FixIt(Session aSession, String aName, system.Array aEnvironmentChanges);

	//default IProgress launchVMProcess(Session session, String name, )

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/UInt32;Lorg/virtualbox_6_1/DeviceType;)V")
	void setBootOrder_FixIt(int aPosition, org.virtualbox_6_1_FixIt.DeviceType aDevice);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/UInt32;)Lorg/virtualbox_6_1/DeviceType;")
	org.virtualbox_6_1_FixIt.DeviceType getBootOrder_FixIt(int aPosition);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;IILorg/virtualbox_6_1/DeviceType;Lorg/virtualbox_6_1/IMedium;)V")
	void attachDevice_FixIt(String aName, int aControllerPort, int aDevice, org.virtualbox_6_1_FixIt.DeviceType aType, IMedium aMedium);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;IILorg/virtualbox_6_1/DeviceType;)V")
	void attachDeviceWithoutMedium_FixIt(String aName, int aControllerPort, int aDevice, org.virtualbox_6_1_FixIt.DeviceType aType);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;II)V")
	void detachDevice(String aName, int aControllerPort, int aDevice);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;III)V")
	void passthroughDevice(String aName, int aControllerPort, int aDevice, int aPassthrough);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;III)V")
	void temporaryEjectDevice(String aName, int aControllerPort, int aDevice, int aTemporaryEject);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;III)V")
	void nonRotationalDevice(String aName, int aControllerPort, int aDevice, int aNonRotational);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;III)V")
	void setAutoDiscardForDevice(String aName, int aControllerPort, int aDevice, int aDiscard);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;III)V")
	void setHotPluggableForDevice(String aName, int aControllerPort, int aDevice, int aHotPluggable);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;IILorg/virtualbox_6_1/IBandwidthGroup;)V")
	void setBandwidthGroupForDevice(String aName, int aControllerPort, int aDevice, IBandwidthGroup aBandwidthGroup);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;II)V")
	void setNoBandwidthGroupForDevice(String aName, int aControllerPort, int aDevice);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;III)V")
	void unmountMedium(String aName, int aControllerPort, int aDevice, int aForce);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;IILorg/virtualbox_6_1/IMedium;I)V")
	void mountMedium(String aName, int aControllerPort, int aDevice, IMedium aMedium, int aForce);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;II)Lorg/virtualbox_6_1/IMedium;")
	IMedium getMedium(String aName, int aControllerPort, int aDevice);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;)LSystem/Array;")
	system.Array getMediumAttachmentsOfController_FixIt(String aName);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;II)Lorg/virtualbox_6_1/IMediumAttachment;")
	IMediumAttachment getMediumAttachment(String aName, int aControllerPort, int aDevice);

	@net.sf.jni4net.attributes.ClrMethod("(III)V")
	void attachHostPCIDevice(int aHostAddress, int aDesiredGuestAddress, int aTryToUnbind);

	@net.sf.jni4net.attributes.ClrMethod("(I)V")
	void detachHostPCIDevice(int aHostAddress);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/UInt32;)Lorg/virtualbox_6_1/INetworkAdapter;")
	INetworkAdapter getNetworkAdapter(int aSlot);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;Lorg/virtualbox_6_1/StorageBus;)Lorg/virtualbox_6_1/IStorageController;")
	IStorageController addStorageController_FixIt(String aName, org.virtualbox_6_1_FixIt.StorageBus aConnectionType);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;)Lorg/virtualbox_6_1/IStorageController;")
	IStorageController getStorageControllerByName(String aName);

	@net.sf.jni4net.attributes.ClrMethod("(Lorg/virtualbox_6_1/StorageBus;LSystem/UInt32;)Lorg/virtualbox_6_1/IStorageController;")
	IStorageController getStorageControllerByInstance_FixIt(org.virtualbox_6_1_FixIt.StorageBus aConnectionType, int aInstance);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;)V")
	void removeStorageController(String aName);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;I)V")
	void setStorageControllerBootable(String aName, int aBootable);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;Lorg/virtualbox_6_1/USBControllerType;)Lorg/virtualbox_6_1/IUSBController;")
	IUSBController addUSBController_FixIt(String aName, org.virtualbox_6_1_FixIt.USBControllerType aType);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;)V")
	void removeUSBController(String aName);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;)Lorg/virtualbox_6_1/IUSBController;")
	IUSBController getUSBControllerByName(String aName);

	@net.sf.jni4net.attributes.ClrMethod("(Lorg/virtualbox_6_1/USBControllerType;)LSystem/UInt32;")
	int getUSBControllerCountByType_FixIt(org.virtualbox_6_1_FixIt.USBControllerType aType);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/UInt32;)Lorg/virtualbox_6_1/ISerialPort;")
	ISerialPort getSerialPort(int aSlot);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/UInt32;)Lorg/virtualbox_6_1/IParallelPort;")
	IParallelPort getParallelPort(int aSlot);

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/Array;")
	system.Array getExtraDataKeys_FixIt();

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;)LSystem/String;")
	String getExtraData(String aKey);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;LSystem/String;)V")
	void setExtraData(String aKey, String aValue);

	@net.sf.jni4net.attributes.ClrMethod("(Lorg/virtualbox_6_1/CPUPropertyType;)I")
	int getCPUProperty_FixIt(org.virtualbox_6_1_FixIt.CPUPropertyType aProperty);

	@net.sf.jni4net.attributes.ClrMethod("(Lorg/virtualbox_6_1/CPUPropertyType;I)V")
	void setCPUProperty_FixIt(org.virtualbox_6_1_FixIt.CPUPropertyType aProperty, int aValue);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/UInt32;LSystem/UInt32;LSystem/UInt32;LSystem/UInt32;LSystem/UInt32;LSystem/UInt32;LSystem/UInt32;)V")
	void getCPUIDLeafByOrdinal(int aOrdinal, net.sf.jni4net.Out<Integer> aIdx, net.sf.jni4net.Out<Integer> aIdxSub, net.sf.jni4net.Out<Integer> aValEax, net.sf.jni4net.Out<Integer> aValEbx, net.sf.jni4net.Out<Integer> aValEcx, net.sf.jni4net.Out<Integer> aValEdx);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/UInt32;LSystem/UInt32;LSystem/UInt32;LSystem/UInt32;LSystem/UInt32;LSystem/UInt32;)V")
	void getCPUIDLeaf(int aIdx, int aIdxSub, net.sf.jni4net.Out<Integer> aValEax, net.sf.jni4net.Out<Integer> aValEbx, net.sf.jni4net.Out<Integer> aValEcx, net.sf.jni4net.Out<Integer> aValEdx);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/UInt32;LSystem/UInt32;LSystem/UInt32;LSystem/UInt32;LSystem/UInt32;LSystem/UInt32;)V")
	void setCPUIDLeaf(int aIdx, int aIdxSub, int aValEax, int aValEbx, int aValEcx, int aValEdx);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/UInt32;LSystem/UInt32;)V")
	void removeCPUIDLeaf(int aIdx, int aIdxSub);

	@net.sf.jni4net.attributes.ClrMethod("()V")
	void removeAllCPUIDLeaves();

	@net.sf.jni4net.attributes.ClrMethod("(Lorg/virtualbox_6_1/HWVirtExPropertyType;)I")
	int getHWVirtExProperty_FixIt(org.virtualbox_6_1_FixIt.HWVirtExPropertyType aProperty);

	@net.sf.jni4net.attributes.ClrMethod("(Lorg/virtualbox_6_1/HWVirtExPropertyType;I)V")
	void setHWVirtExProperty_FixIt(org.virtualbox_6_1_FixIt.HWVirtExPropertyType aProperty, int aValue);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;)Lorg/virtualbox_6_1/IProgress;")
	IProgress setSettingsFilePath(String aSettingsFilePath);

	@net.sf.jni4net.attributes.ClrMethod("()V")
	void saveSettings();

	@net.sf.jni4net.attributes.ClrMethod("()V")
	void discardSettings();

	@net.sf.jni4net.attributes.ClrMethod("(Lorg/virtualbox_6_1/CleanupMode;)LSystem/Array;")
	system.Array unregister_FixIt(org.virtualbox_6_1_FixIt.CleanupMode aCleanupMode);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/Array;)Lorg/virtualbox_6_1/IProgress;")
	IProgress deleteConfig_FixIt(system.Array aMedia);

	@net.sf.jni4net.attributes.ClrMethod("(Lorg/virtualbox_6_1/IAppliance;LSystem/String;)Lorg/virtualbox_6_1/IVirtualSystemDescription;")
	IVirtualSystemDescription exportTo(IAppliance aAppliance, String aLocation);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;)Lorg/virtualbox_6_1/ISnapshot;")
	ISnapshot findSnapshot(String aNameOrId);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;LSystem/String;IILSystem/String;)V")
	void createSharedFolder(String aName, String aHostPath, int aWritable, int aAutoMount, String aAutoMountPoint);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;)V")
	void removeSharedFolder(String aName);

	@net.sf.jni4net.attributes.ClrMethod("()I")
	int canShowConsoleWindow();

	@net.sf.jni4net.attributes.ClrMethod("()J")
	long showConsoleWindow();

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;LSystem/String;JLSystem/String;)V")
	void getGuestProperty(String aName, net.sf.jni4net.Out<String> aValue, net.sf.jni4net.Out<Long> aTimeStamp, net.sf.jni4net.Out<String> aFlags);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;)LSystem/String;")
	String getGuestPropertyValue(String aProperty);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;)J")
	long getGuestPropertyTimestamp(String aProperty);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;LSystem/String;LSystem/String;)V")
	void setGuestProperty(String aProperty, String aValue, String aFlags);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;LSystem/String;)V")
	void setGuestPropertyValue(String aProperty, String aValue);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;)V")
	void deleteGuestProperty(String aName);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;LSystem/Array;LSystem/Array;LSystem/Array;LSystem/Array;)V")
	void enumerateGuestProperties(String aPatterns, net.sf.jni4net.Out<system.Array> aNames, net.sf.jni4net.Out<system.Array> aValues, net.sf.jni4net.Out<system.Array> aTimestamps, net.sf.jni4net.Out<system.Array> aFlags);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/UInt32;LSystem/UInt32;LSystem/UInt32;LSystem/UInt32;LSystem/UInt32;I)V")
	void querySavedGuestScreenInfo(int aScreenId, net.sf.jni4net.Out<Integer> aOriginX, net.sf.jni4net.Out<Integer> aOriginY, net.sf.jni4net.Out<Integer> aWidth, net.sf.jni4net.Out<Integer> aHeight, net.sf.jni4net.Out<Integer> aEnabled);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/UInt32;Lorg/virtualbox_6_1/BitmapFormat;LSystem/UInt32;LSystem/UInt32;)LSystem/Array;")
	system.Array readSavedThumbnailToArray_FixIt(int aScreenId, org.virtualbox_6_1_FixIt.BitmapFormat aBitmapFormat, net.sf.jni4net.Out<Integer> aWidth, net.sf.jni4net.Out<Integer> aHeight);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/UInt32;LSystem/UInt32;LSystem/UInt32;)LSystem/Array;")
	system.Array querySavedScreenshotInfo_FixIt(int aScreenId, net.sf.jni4net.Out<Integer> aWidth, net.sf.jni4net.Out<Integer> aHeight);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/UInt32;Lorg/virtualbox_6_1/BitmapFormat;LSystem/UInt32;LSystem/UInt32;)LSystem/Array;")
	system.Array readSavedScreenshotToArray_FixIt(int aScreenId, org.virtualbox_6_1_FixIt.BitmapFormat aBitmapFormat, net.sf.jni4net.Out<Integer> aWidth, net.sf.jni4net.Out<Integer> aHeight);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/UInt32;)V")
	void hotPlugCPU(int aCpu);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/UInt32;)V")
	void hotUnplugCPU(int aCpu);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/UInt32;)I")
	int getCPUStatus(int aCpu);

	@net.sf.jni4net.attributes.ClrMethod("()Lorg/virtualbox_6_1/ParavirtProvider;")
	org.virtualbox_6_1_FixIt.ParavirtProvider getEffectiveParavirtProvider_FixIt();

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/UInt32;)LSystem/String;")
	String queryLogFilename(int aIdx);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/UInt32;JJ)LSystem/Array;")
	system.Array readLog_FixIt(int aIdx, long aOffset, long aSize);

	@net.sf.jni4net.attributes.ClrMethod("(Lorg/virtualbox_6_1/IMachine;Lorg/virtualbox_6_1/CloneMode;LSystem/Array;)Lorg/virtualbox_6_1/IProgress;")
	IProgress cloneTo_FixIt(IMachine aTarget, org.virtualbox_6_1_FixIt.CloneMode aMode, system.Array aOptions);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;LSystem/String;)Lorg/virtualbox_6_1/IProgress;")
	IProgress moveTo(String aFolder, String aType);

	@net.sf.jni4net.attributes.ClrMethod("()Lorg/virtualbox_6_1/IProgress;")
	IProgress saveState();

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;)V")
	void adoptSavedState(String aSavedStateFile);

	@net.sf.jni4net.attributes.ClrMethod("(I)V")
	void discardSavedState(int aFRemoveFile);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;LSystem/String;ILSystem/String;)Lorg/virtualbox_6_1/IProgress;")
	IProgress takeSnapshot(String aName, String aDescription, int aPause, net.sf.jni4net.Out<String> aId);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;)Lorg/virtualbox_6_1/IProgress;")
	IProgress deleteSnapshot(String aId);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;)Lorg/virtualbox_6_1/IProgress;")
	IProgress deleteSnapshotAndAllChildren(String aId);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;LSystem/String;)Lorg/virtualbox_6_1/IProgress;")
	IProgress deleteSnapshotRange(String aStartId, String aEndId);

	@net.sf.jni4net.attributes.ClrMethod("(Lorg/virtualbox_6_1/ISnapshot;)Lorg/virtualbox_6_1/IProgress;")
	IProgress restoreSnapshot(ISnapshot aSnapshot);

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;)V")
	void applyDefaults(String aFlags);

	@net.sf.jni4net.attributes.ClrMethod("()V")
	void internalAndReservedMethod1IMachine();

	@net.sf.jni4net.attributes.ClrMethod("()V")
	void internalAndReservedMethod2IMachine();

	@net.sf.jni4net.attributes.ClrMethod("()V")
	void internalAndReservedMethod3IMachine();

	@net.sf.jni4net.attributes.ClrMethod("()V")
	void internalAndReservedMethod4IMachine();

	@net.sf.jni4net.attributes.ClrMethod("()V")
	void internalAndReservedMethod5IMachine();

	@net.sf.jni4net.attributes.ClrMethod("()V")
	void internalAndReservedMethod6IMachine();

	@net.sf.jni4net.attributes.ClrMethod("()V")
	void internalAndReservedMethod7IMachine();

	@net.sf.jni4net.attributes.ClrMethod("()V")
	void internalAndReservedMethod8IMachine();

	@net.sf.jni4net.attributes.ClrMethod("()Lorg/virtualbox_6_1/VirtualBox;")
	VirtualBox getParent();

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/Array;")
	system.Array getIcon_FixIt();

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/Array;)V")
	void setIcon_FixIt(system.Array aIcon);

	@net.sf.jni4net.attributes.ClrMethod("()I")
	int getAccessible();

	@net.sf.jni4net.attributes.ClrMethod("()Lorg/virtualbox_6_1/IVirtualBoxErrorInfo;")
	IVirtualBoxErrorInfo getAccessError();

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/String;")
	String getName();

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;)V")
	void setName(String aName);

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/String;")
	String getDescription();

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;)V")
	void setDescription(String aDescription);

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/String;")
	String getId();

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/Array;")
	system.Array getGroups_FixIt();

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/Array;)V")
	void setGroups_FixIt(system.Array aGroups);

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/String;")
	String getOSTypeId();

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;)V")
	void setOSTypeId(String aOSTypeId);

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/String;")
	String getHardwareVersion();

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;)V")
	void setHardwareVersion(String aHardwareVersion);

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/String;")
	String getHardwareUUID();

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;)V")
	void setHardwareUUID(String aHardwareUUID);

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/UInt32;")
	int getCPUCount();

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/UInt32;)V")
	void setCPUCount(int aCPUCount);

	@net.sf.jni4net.attributes.ClrMethod("()I")
	int getCPUHotPlugEnabled();

	@net.sf.jni4net.attributes.ClrMethod("(I)V")
	void setCPUHotPlugEnabled(int aCPUHotPlugEnabled);

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/UInt32;")
	int getCPUExecutionCap();

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/UInt32;)V")
	void setCPUExecutionCap(int aCPUExecutionCap);

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/UInt32;")
	int getCPUIDPortabilityLevel();

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/UInt32;)V")
	void setCPUIDPortabilityLevel(int aCPUIDPortabilityLevel);

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/UInt32;")
	int getMemorySize();

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/UInt32;)V")
	void setMemorySize(int aMemorySize);

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/UInt32;")
	int getMemoryBalloonSize();

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/UInt32;)V")
	void setMemoryBalloonSize(int aMemoryBalloonSize);

	@net.sf.jni4net.attributes.ClrMethod("()I")
	int getPageFusionEnabled();

	@net.sf.jni4net.attributes.ClrMethod("(I)V")
	void setPageFusionEnabled(int aPageFusionEnabled);

	@net.sf.jni4net.attributes.ClrMethod("()Lorg/virtualbox_6_1/IGraphicsAdapter;")
	IGraphicsAdapter getGraphicsAdapter();

	@net.sf.jni4net.attributes.ClrMethod("()Lorg/virtualbox_6_1/IBIOSSettings;")
	IBIOSSettings getBIOSSettings();

	@net.sf.jni4net.attributes.ClrMethod("()Lorg/virtualbox_6_1/IRecordingSettings;")
	IRecordingSettings getRecordingSettings();

	@net.sf.jni4net.attributes.ClrMethod("()Lorg/virtualbox_6_1/FirmwareType;")
	org.virtualbox_6_1_FixIt.FirmwareType getFirmwareType_FixIt();

	@net.sf.jni4net.attributes.ClrMethod("(Lorg/virtualbox_6_1/FirmwareType;)V")
	void setFirmwareType_FixIt(org.virtualbox_6_1_FixIt.FirmwareType aFirmwareType);

	@net.sf.jni4net.attributes.ClrMethod("()Lorg/virtualbox_6_1/PointingHIDType;")
	org.virtualbox_6_1_FixIt.PointingHIDType getPointingHIDType_FixIt();

	@net.sf.jni4net.attributes.ClrMethod("(Lorg/virtualbox_6_1/PointingHIDType;)V")
	void setPointingHIDType_FixIt(org.virtualbox_6_1_FixIt.PointingHIDType aPointingHIDType);

	@net.sf.jni4net.attributes.ClrMethod("()Lorg/virtualbox_6_1/KeyboardHIDType;")
	org.virtualbox_6_1_FixIt.KeyboardHIDType getKeyboardHIDType_FixIt();

	@net.sf.jni4net.attributes.ClrMethod("(Lorg/virtualbox_6_1/KeyboardHIDType;)V")
	void setKeyboardHIDType_FixIt(org.virtualbox_6_1_FixIt.KeyboardHIDType aKeyboardHIDType);

	@net.sf.jni4net.attributes.ClrMethod("()I")
	int getHPETEnabled();

	@net.sf.jni4net.attributes.ClrMethod("(I)V")
	void setHPETEnabled(int aHPETEnabled);

	@net.sf.jni4net.attributes.ClrMethod("()Lorg/virtualbox_6_1/ChipsetType;")
	org.virtualbox_6_1_FixIt.ChipsetType getChipsetType_FixIt();

	@net.sf.jni4net.attributes.ClrMethod("(Lorg/virtualbox_6_1/ChipsetType;)V")
	void setChipsetType_FixIt(org.virtualbox_6_1_FixIt.ChipsetType aChipsetType);

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/String;")
	String getSnapshotFolder();

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;)V")
	void setSnapshotFolder(String aSnapshotFolder);

	@net.sf.jni4net.attributes.ClrMethod("()Lorg/virtualbox_6_1/IVRDEServer;")
	IVRDEServer getVRDEServer();

	@net.sf.jni4net.attributes.ClrMethod("()I")
	int getEmulatedUSBCardReaderEnabled();

	@net.sf.jni4net.attributes.ClrMethod("(I)V")
	void setEmulatedUSBCardReaderEnabled(int aEmulatedUSBCardReaderEnabled);

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/Array;")
	system.Array getMediumAttachments_FixIt();

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/Array;")
	system.Array getUSBControllers_FixIt();

	@net.sf.jni4net.attributes.ClrMethod("()Lorg/virtualbox_6_1/IUSBDeviceFilters;")
	IUSBDeviceFilters getUSBDeviceFilters();

	@net.sf.jni4net.attributes.ClrMethod("()Lorg/virtualbox_6_1/IAudioAdapter;")
	IAudioAdapter getAudioAdapter();

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/Array;")
	system.Array getStorageControllers_FixIt();

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/String;")
	String getSettingsFilePath();

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/String;")
	String getSettingsAuxFilePath();

	@net.sf.jni4net.attributes.ClrMethod("()I")
	int getSettingsModified();

	@net.sf.jni4net.attributes.ClrMethod("()Lorg/virtualbox_6_1/SessionState;")
	org.virtualbox_6_1_FixIt.SessionState getSessionState_FixIt();

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/String;")
	String getSessionName();

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/UInt32;")
	int getSessionPID();

	@net.sf.jni4net.attributes.ClrMethod("()Lorg/virtualbox_6_1/MachineState;")
	org.virtualbox_6_1_FixIt.MachineState getState_FixIt();

	default MachineState getState() {
		int state = Exports.convertEnum(getState_FixIt());
		for (var value : MachineState.values())
			if (value.value() == state)
				return value;
		return null;
	}

	@net.sf.jni4net.attributes.ClrMethod("()J")
	long getLastStateChange();

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/String;")
	String getStateFilePath();

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/String;")
	String getLogFolder();

	@net.sf.jni4net.attributes.ClrMethod("()Lorg/virtualbox_6_1/ISnapshot;")
	ISnapshot getCurrentSnapshot();

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/UInt32;")
	int getSnapshotCount();

	@net.sf.jni4net.attributes.ClrMethod("()I")
	int getCurrentStateModified();

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/Array;")
	system.Array getSharedFolders_FixIt();

	@net.sf.jni4net.attributes.ClrMethod("()Lorg/virtualbox_6_1/ClipboardMode;")
	org.virtualbox_6_1_FixIt.ClipboardMode getClipboardMode_FixIt();

	@net.sf.jni4net.attributes.ClrMethod("(Lorg/virtualbox_6_1/ClipboardMode;)V")
	void setClipboardMode_FixIt(org.virtualbox_6_1_FixIt.ClipboardMode aClipboardMode);

	@net.sf.jni4net.attributes.ClrMethod("()I")
	int getClipboardFileTransfersEnabled();

	@net.sf.jni4net.attributes.ClrMethod("(I)V")
	void setClipboardFileTransfersEnabled(int aClipboardFileTransfersEnabled);

	@net.sf.jni4net.attributes.ClrMethod("()Lorg/virtualbox_6_1/DnDMode;")
	org.virtualbox_6_1_FixIt.DnDMode getDnDMode_FixIt();

	@net.sf.jni4net.attributes.ClrMethod("(Lorg/virtualbox_6_1/DnDMode;)V")
	void setDnDMode_FixIt(org.virtualbox_6_1_FixIt.DnDMode aDnDMode);

	@net.sf.jni4net.attributes.ClrMethod("()I")
	int getTeleporterEnabled();

	@net.sf.jni4net.attributes.ClrMethod("(I)V")
	void setTeleporterEnabled(int aTeleporterEnabled);

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/UInt32;")
	int getTeleporterPort();

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/UInt32;)V")
	void setTeleporterPort(int aTeleporterPort);

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/String;")
	String getTeleporterAddress();

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;)V")
	void setTeleporterAddress(String aTeleporterAddress);

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/String;")
	String getTeleporterPassword();

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;)V")
	void setTeleporterPassword(String aTeleporterPassword);

	@net.sf.jni4net.attributes.ClrMethod("()Lorg/virtualbox_6_1/ParavirtProvider;")
	org.virtualbox_6_1_FixIt.ParavirtProvider getParavirtProvider_FixIt();

	@net.sf.jni4net.attributes.ClrMethod("(Lorg/virtualbox_6_1/ParavirtProvider;)V")
	void setParavirtProvider_FixIt(org.virtualbox_6_1_FixIt.ParavirtProvider aParavirtProvider);

	@net.sf.jni4net.attributes.ClrMethod("()I")
	int getRTCUseUTC();

	@net.sf.jni4net.attributes.ClrMethod("(I)V")
	void setRTCUseUTC(int aRTCUseUTC);

	@net.sf.jni4net.attributes.ClrMethod("()I")
	int getIOCacheEnabled();

	@net.sf.jni4net.attributes.ClrMethod("(I)V")
	void setIOCacheEnabled(int aIOCacheEnabled);

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/UInt32;")
	int getIOCacheSize();

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/UInt32;)V")
	void setIOCacheSize(int aIOCacheSize);

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/Array;")
	system.Array getPCIDeviceAssignments_FixIt();

	@net.sf.jni4net.attributes.ClrMethod("()Lorg/virtualbox_6_1/IBandwidthControl;")
	IBandwidthControl getBandwidthControl();

	@net.sf.jni4net.attributes.ClrMethod("()I")
	int getTracingEnabled();

	@net.sf.jni4net.attributes.ClrMethod("(I)V")
	void setTracingEnabled(int aTracingEnabled);

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/String;")
	String getTracingConfig();

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;)V")
	void setTracingConfig(String aTracingConfig);

	@net.sf.jni4net.attributes.ClrMethod("()I")
	int getAllowTracingToAccessVM();

	@net.sf.jni4net.attributes.ClrMethod("(I)V")
	void setAllowTracingToAccessVM(int aAllowTracingToAccessVM);

	@net.sf.jni4net.attributes.ClrMethod("()I")
	int getAutostartEnabled();

	@net.sf.jni4net.attributes.ClrMethod("(I)V")
	void setAutostartEnabled(int aAutostartEnabled);

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/UInt32;")
	int getAutostartDelay();

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/UInt32;)V")
	void setAutostartDelay(int aAutostartDelay);

	@net.sf.jni4net.attributes.ClrMethod("()Lorg/virtualbox_6_1/AutostopType;")
	org.virtualbox_6_1_FixIt.AutostopType getAutostopType_FixIt();

	@net.sf.jni4net.attributes.ClrMethod("(Lorg/virtualbox_6_1/AutostopType;)V")
	void setAutostopType_FixIt(org.virtualbox_6_1_FixIt.AutostopType aAutostopType);

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/String;")
	String getDefaultFrontend();

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;)V")
	void setDefaultFrontend(String aDefaultFrontend);

	@net.sf.jni4net.attributes.ClrMethod("()I")
	int getUSBProxyAvailable();

	@net.sf.jni4net.attributes.ClrMethod("()Lorg/virtualbox_6_1/VMProcPriority;")
	org.virtualbox_6_1_FixIt.VMProcPriority getVMProcessPriority_FixIt();

	@net.sf.jni4net.attributes.ClrMethod("(Lorg/virtualbox_6_1/VMProcPriority;)V")
	void setVMProcessPriority_FixIt(org.virtualbox_6_1_FixIt.VMProcPriority aVMProcessPriority);

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/String;")
	String getParavirtDebug();

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;)V")
	void setParavirtDebug(String aParavirtDebug);

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/String;")
	String getCPUProfile();

	@net.sf.jni4net.attributes.ClrMethod("(LSystem/String;)V")
	void setCPUProfile(String aCPUProfile);

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/UInt32;")
	int getInternalAndReservedAttribute1IMachine();

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/UInt32;")
	int getInternalAndReservedAttribute2IMachine();

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/UInt32;")
	int getInternalAndReservedAttribute3IMachine();

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/UInt32;")
	int getInternalAndReservedAttribute4IMachine();

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/UInt32;")
	int getInternalAndReservedAttribute5IMachine();

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/UInt32;")
	int getInternalAndReservedAttribute6IMachine();

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/UInt32;")
	int getInternalAndReservedAttribute7IMachine();

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/UInt32;")
	int getInternalAndReservedAttribute8IMachine();

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/UInt32;")
	int getInternalAndReservedAttribute9IMachine();

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/UInt32;")
	int getInternalAndReservedAttribute10IMachine();

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/UInt32;")
	int getInternalAndReservedAttribute11IMachine();

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/UInt32;")
	int getInternalAndReservedAttribute12IMachine();

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/UInt32;")
	int getInternalAndReservedAttribute13IMachine();

	@net.sf.jni4net.attributes.ClrMethod("()LSystem/UInt32;")
	int getInternalAndReservedAttribute14IMachine();
	//</generated-interface>
}
